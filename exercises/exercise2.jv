
// get valid IFOPT data type
valuetype IFOPTValidtype oftype text {
	constraints: [IFOPT_Format, NotEmptyText];
}

constraint IFOPT_Format oftype RegexConstraint {
    regex: /[a-z]{2}:\d+:\d+(:\d+)?/;
}

// get coordinate data type 
valuetype Coordinatetype oftype decimal {
    constraints: [CoordinateRange];
}

constraint CoordinateRange oftype RangeConstraint {
    lowerBound: -90;
    upperBound: 90;
}

// get Verkehr data type 
valuetype VerkehrValidtype oftype text {
    constraints: [VerkehrValidList, NotEmptyText];
}

constraint VerkehrValidList oftype AllowlistConstraint {
  allowlist: ["FV", "RV", "nur DPN"];
}

// Empty Text 
valuetype TextValidtype oftype text {
    constraints: [NotEmptyText];
}

constraint NotEmptyText oftype DenylistConstraint {
  denylist: [""];
}

// Empty Integer
valuetype IntegerValidtype oftype integer {
    constraints: [NotEmptyInteger];
}
constraint NotEmptyInteger oftype RangeConstraint {
    lowerBound: -1000000000;
    upperBound: 1000000000;
}

// Pipeline for the trainstop dataset
pipeline TrainStopsPipeline {

	block TrainStopsExtractor oftype HttpExtractor {
		url: "https://download-data.deutschebahn.com/static/datasets/haltestellen/D_Bahnhof_2020_alle.CSV";
	}

	block TrainStopsInterpreter oftype TextFileInterpreter {
    }

	block TrainStopsCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block StatusColumnDeleter oftype ColumnDeleter {
        delete: [column J];
        }

	block TrainStopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "EVA_NR" oftype IntegerValidtype,
            "DS100" oftype TextValidtype,
            "IFOPT" oftype IFOPTValidtype,
            "NAME" oftype TextValidtype,
            "Verkehr" oftype VerkehrValidtype,
            "Laenge" oftype Coordinatetype,
            "Breite" oftype Coordinatetype,
            "Betreiber_Name" oftype TextValidtype,
            "Betreiber_Nr" oftype IntegerValidtype,
        ];
    }

	block TrainStopsLoader oftype SQLiteLoader {
		table: "trainstops";
		file: "./trainstops.sqlite";
	}

    TrainStopsExtractor
		-> TrainStopsInterpreter
		-> TrainStopsCSVInterpreter
        -> StatusColumnDeleter
		-> TrainStopsTableInterpreter
        -> TrainStopsLoader;
}